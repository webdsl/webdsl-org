General WebDSL Issues
---------------------

- scope of transactions / session beans
  - should it be extended? may be cause of caching bugs

- backing into edit screen causes crash on subsequent save
  - jboss dependent?
  - general: better management of conversations and (in)validation of
    URLs

- Ordering of list elements
  ordered lists; lists tend to lose ordering, e.g. author list

x fix drop-down menus

- unselect all issues in a many select box

- rendering lists with separators (e.g. authors separated by commas)

- warning if page has no title

x captcha to prevent spambots

- generic operations on objects
  - clone: entities with a symbolic id, may need to be cloned in order
    to rename the id (e.g. changing the projectname of a project, or
    the key of a wiki page)
  - delete: recursively delete an object and all objects dependent on it

- hidden / read-only
  - hidden property is excluded from editRows
  - read-only property is not made editable in editRows

- creating objects when going to page with non-existing id is not a
good idea in general; default should be to catch this case and go to
an error page.



Page Events
-----------

- automatic creation of objects when id does not exist is not a good idea
  -> redirect to error page by default
  - should be able to perform specific action when desired (e.g. creation
    of non-existing wiki page)

- define page EVENTS, which declare how to react to certain events
  - event object-does-not-exist { ... }
  - event 
  -> exceptions? or more general? i.e. also non-exceptional events?

Interaction Patterns
--------------------

- creating new objects (especially objects with a symbolic id)
  x wiki page
  x issue
  x blog entry 
    - comments to blog entries
  x forums, discussions, replies

- deleting objects

Navigation
----------

- entry points
  x home page of complete app
  x start pages for sub-apps (e.g. issues)
  - need to identify recently added objects, important
    objects, etc.

x how to organize navigation between sub-applications
  -> menubar to switch between applications
  -> wiki links in WikiText provide fine grained navigation

- examples
  x start pages of a wiki
  - road map for issue tracker

RSS
---

- support generation of XML RSS output

Layout
------


- CSS definition
  x layout of page
  x menubar (scaling)
  x fonts
  x headers
  - tables

  - issueProperties div should float right

  - par is not new line?

	  par{ action("Save changes", savePage()) }
	  
          par{ 
            "*) The name of a page is the key that is used to refer to it "
            "and cannot be changed after creation. " 
          }

   produces

      <p><input type="submit" name="j_id132:j_id147" value="Save changes" />
      </p>
      <p>*) The name of a page is the key 
	that is used to refer to it and cannot be changed after creation.  </p>

   but no line break in between (in firefox)

Authentication
--------------

x sign in
x change password

- registering new users
  - random URL for email confirmation
  - don't show confirmation checkbox

Configuration
-------------

- logo image in configuration

- java.lang.ArrayStoreException
  on editConfiguration for second time

News
----

x news items
x show most n recent items
x edit News

Wiki
----

x edit history
x name should be read-only
x add title to override reference
x start pages should be shown on wiki front-page
- name spaces: foo/bar already works
  - it should be possible to use this notion in access control,
    e.g. owner of foo owns all foo/* pages
- categories
- tags
- in diff page, visualize the differences

Blog
----

x create a new blog
x terminology is confusing, distinction between a Blog and a Blog post.
  -> called Blog Entry
- 'read more' link to view page of blog entry
- blog comments

Forum
-----

x discussion threads
x adding replies 
x Posting replies does not seem to work properly 
  (my reply was posted 3 times)

Issues
------

- show all issue types

- Projectname and Key cannot be changed after creation

- Nextkey property should not be edited

- themes and releases 
  x to organize views on collections of issues
  
- editProject
  - custom page
  - key should be read-only
  - nextkey should be read-only

- editIssue
  - custom page
  - select requires / requiredby from issues in project
  x include title in select menu (i.e. in name?)

x Improve "submit issue" interface (there's no names for each field)

- filters on issues
  - all open issues
  - issues by assignee, by reporter
  - older than x days
  - by theme
  - by release
  - by priority
  - by due date
  - ...

- find conflicts between issues
  - based on dependencies and due dates
  - derive necessary due dates
  - propagate due dates along requires relation

- roadmap

- from issue tracking to workflow
  - workflow is repeatable tree of dependent issues

FAQ
---

- finding questions

Tags
----

- generic mechanism for categorizing content (objects)
- should be possible to add tags by name, but also
  select tags from (user's) collection
